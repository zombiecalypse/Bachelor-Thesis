text=/home/aaron/Bachelor/text filter="*.mdown **/*.tex *.bib" {
 README.mdown
 abstract.tex
 appendix.tex
 completeness/completeness.tex
 complexity/complexity.tex
 for/for.tex
 introduction/introduction.tex
 langcomplexity/langcomplexity.tex
 main.tex
 robustness/robustness.tex
 self/self.tex
 transforms/transforms.tex
 while/while.tex
 biblio.bib
}
implementation=/home/aaron/Bachelor/implementation {
 Makefile
 README.mdown
 turing=turing filter="*.hs" {
  Parser.hs
  Runner.hs
 }
 while=while/ filter="*.cabal TODO" {
  while.cabal
  TODO
	executables=src filter="*.hs" {
   data.hs
   eval-while.hs
   eval-for.hs
   statement.hs
	}
	lib=src/While filter="*.hs" {
   Base.hs
   Data.hs
   DataExpression.hs
   Dialect.hs
   Evaluate.hs
   FromData.hs
   Helpers.hs
   Parser.hs
   ProgramType.hs
   Tree.hs
	 Parser=Parser {
    Data.hs
    DataExpression.hs
    ProgramType.hs
    StatementParser.hs
	 }
	}
	examples=examples filter="*" {
   error.wl
   example.wl
   function_call.wl
   identity.wl
   simple_call.wl
	}
 }
}
