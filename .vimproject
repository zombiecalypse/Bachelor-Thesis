text=/home/aaron/Bachelor/text filter="*.mdown *.tex *.bib" {
 README.mdown
 abstract.tex
 appendix.tex
 main.tex
 biblio.bib
 01intro=introduction filter="**/*.tex" {
  for/for.tex
  introduction/introduction.tex
  while/while.tex
 }
 02computability=computability filter="**/*.tex" {
  completeness/completeness.tex
  self/self.tex
  transforms/transforms.tex
 }
 03complexity=complexity filter="**/*.tex" {
  complexity/complexity.tex
  langcomplexity/langcomplexity.tex
 }
}
implementation=/home/aaron/Bachelor/implementation {
 Makefile
 README.mdown
 turing=turing filter="*.hs *.tm" {
  addition.tm
  example.tm
  src=src filter="**/*.hs" {
   Turing/Parser.hs
   Turing/Runner.hs
   eval.hs
  }
 }
 while=while/ filter="*.cabal TODO Makefile" {
  while.cabal
  TODO
  Makefile
	executables=src filter="*.hs" {
   data.hs
   eval-for.hs
   eval-while.hs
   statement.hs
	}
	lib=src/While filter="*.hs" {
   Base.hs
   Data.hs
   DataExpression.hs
   Dialect.hs
   Evaluate.hs
   FromData.hs
   Helpers.hs
   Parser.hs
   ProgramType.hs
   Statement.hs
   Tree.hs
	}
	examples=examples filter="*" {
   eq.wl
   error.wl
   error_parse.wl
   example.wl
   for.wl
   function_call.wl
   identity.wl
   simple_call.wl
   symbol.wl
   turing.wl
	}
 }
}
presentation="/home/aaron/Bachelor/presentation/" filter="*.tex" {
 main.tex
}
